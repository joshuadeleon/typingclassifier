@model ML.TypingClassifier.Models.Sentinel
@{
    ViewBag.Title = "Typing Classifier";
}
@section scripts
{
  <script type="text/javascript">
    'use strict'

    $(function() {
      var start
        , trapper
        , currentEvent
        , payload = {}
        , events = []
        , capturing = false;

      var now = getTimer();

      function resetTrapper() {
        if(trapper) { window.clearTimeout(trapper); }
        trapper = setTimeout(function() {
          capturing = false;
          console.log('stopped capturing');
        }, 1005);
      }

      

      $('#score-btn').click(function() {
        if(rootOutCheaters(events)) {
          alert('Thanks for cheating. You are our newest inductee into the hall of shame.');
          return;
        }
        if(!isValid()) {
          console.log('Please include a handle and an email');
          return;
        }
        payload.handle = document.getElementById('handle').value;
        payload.email = document.getElementById('email').value;
        payload.events = events.slice();
        $.ajax({
          url: 'http://typingclassifier.azurewebsites.net/sink',
          type: 'POST',
          contentType: 'application/json; charset=utf-8',
          data: JSON.stringify(payload),
          dataType: 'json',
          success: function() { events = []; clearText(); },
          error: function(e) { console.log(e); },
          processData: false
        });
      });

      function loop() {
        setTimeout(function() {
          var done = isComplete();
          if(done) {
            $('#score-btn').prop('disabled', false);
          }
          loop();
        }, 200);
      }

      document.addEventListener('keydown', function(event) {
        resetTrapper();
        if(!capturing) {
          console.log('capturing...');
          capturing = true;
          start = now();
        }
        if(event.repeat) {
          return;
        }
        var t = now();
        currentEvent = {
          e: event.key,
          t: t
        };
      });

      document.addEventListener('keyup', function(event) {
        var up = now();
        currentEvent.d = up - currentEvent.t;
        events.push(currentEvent);
        console.log(currentEvent);
      });

      loop();
    });

    function getTimer() {
      if(window.performance.now) {
        return function() { return window.performance.now(); };
      } else if(window.performance.webkitNow) {
        return function() { return window.performance.webkitNow(); }
      } else {
        return function() { return new Date().getTime(); }
      }
    }

    function rootOutCheaters(events) {
      var cs = $('#sentinel').text().trim().length;
      var isCheater = isComplete() && (events.length < cs || hasPasted(events));
      if(isCheater) {
        console.log('You are our newest inductee into the hall of shame.');
      }
      return isCheater;
    }

    function isValid() {
      var isValid = validateById('handle') && validateById('email');
      return isValid;
    }

    function validateById(id) {
      var el = document.getElementById(id);
      if(el && el.value.length == 0) {
        el.classList.add('error');
        return false;
      }
      return true;
    }

    function isComplete() {
      var text = $('#sentinel').text().trim();
      var input = $('#user-input').val().trim();
      return text === input;
    }

    function hasPasted(events) {
      for(var i = 0; i < events.length - 1; ++i) {
        if(events[i].e == "Control" && events[i+1].e == "v") {
          return true;
        }
      }
      return false;
    }

    function clearText() {
      $('#user-input').val('');
    }

  </script>
}
<main class="container body-content" id="form">
    <section>
      <h4>Please enter a handle and a valid email address:</h4>
    <label>Handle</label>
    <input id="handle" type="text" value="" />
    <label>Email</label>
    <input id="email" type="email" />
    </section>
  <section>
    <h4>Please submit the following input into our Freudian Psychoanalyzer:</h4>
    <p oncopy="return false" id="sentinel">
      @Model.Text
    </p>
    <textarea oncontextmenu="return false;" id="user-input" class="input"></textarea>
    <button class="btn btn-primary" id="score-btn" disabled="true">Submit</button>
  </section>
</main>